<source>
  @type syslog
  port 5142
  tag syslog
</source>

<filter syslog.**>
  @type grep
  <regexp>
    key ident
    pattern /^kernel$/
  </regexp>
</filter>

<match syslog.**>
	@type rewrite_tag_filter
	<rule>
            key message
            pattern /^.*(IN|OUT).*TCP.*$/
            tag firewall.logs.tcp
        </rule>
	<rule>
	    key message
            pattern /^.*(IN|OUT).*UDP.*$/
            tag firewall.logs.udp
        </rule>
        <rule>
            key message
            pattern /^.*(IN|OUT).*ICMP.*$/
            tag firewall.logs.icmp
        </rule>
</match>

<filter firewall.**>
  @type parser
  key_name message
  <parse>
    @type regexp
    expression /\[(?<Rule>[\w].*)\](IN|OUT).*SRC=(?<SourceIP>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b) DST=(?<DestIP>\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b).*PROTO=(?<Protocol>TCP|UDP|ICMP|2).* SPT=(?<SourcePort>[\d]{1,5}) DPT=(?<DestPort>[\d]{1,5})/
  </parse>
</filter>

<filter firewall.logs.**>
    @type geoip
    geoip_lookup_keys SourceIP
    backend_library geoip2_c
  <record>
    city            ${city.names.en["SourceIP"]}
    latitude        ${location.latitude["SourceIP"]}
    longitude       ${location.longitude["SourceIP"]}
    country         ${country.iso_code["SourceIP"]}
    country_name    ${country.names.en["SourceIP"]}
    postal_code     ${postal.code["SourceIP"]}
    region_code     ${subdivisions.0.iso_code["SourceIP"]}
    region_name     ${subdivisions.0.names.en["SourceIP"]}
  </record>
   skip_adding_null_record true
  </filter>
<match firewall.**>
    @type azure-loganalytics
    customer_id WORKSPACE_ID  # Customer ID aka WorkspaceID String
    shared_key KEY     # The primary or the secondary Connected Sources client authentication key
    log_type UnifiFirewallLogs  # The name of the event type. ex) ApacheAccessLog
    add_time_field true
    time_format %FT%T%z
    localtime true
    add_tag_field true
    tag_field_name tag
</match>
